#labels Featured,Phase-Design
#the modifications to ffplay are in 

More information here
Thanks to Yanos, theo for all their help.

Here are the results with a xvid movie.

bitrate 1500kbs, resolution dvd, size 6 , streamed from an elgato media server.

http://web.me.com/cannonwc/Site/Photos_5.html#3

You can get the updated code here. The zip has not been repacked, so if you choice to use the zip file you need to copy the ffplay.c from the svn.

http://99.139.107.194/svn/test/portalServer/ffplay/

the svn passwrd and userid are both test

This information will also be uploaded to the ffmpeg4iphone svn as of (01-26-2010)

ffplay isn't much good without a way of selecting movies for play, right now the movies are hard coded in the player.

I am trying to come up with a fronted for the sdl player.

I am exploring two methods.

1) hacking libsdl to expose the applicationdelegate and or forceing the sdl-surface into a eaglview.

This is partially sucessful, though very difficult.

2) some kind of back end launcher. the issue with this is I don't know how that would fly in the app store, one app dependent on another. But I've seen some other suites. Also its not clear how sdl programs will be accepted.

the player would be launched via a custom url scheme. 

The url would be passed via shared keychain, since there doesn't appear to be anyway to pass the url to the sdl app.

sdl is designed as a graphics library and its great at that fps is very high with ffplay. But not allowing more native controller support is a bad shortcomming.

FFplay is going to remain totally open source.

The enchancements will be jointly hosted and handled by

ffmpeg4iphone google site run by yonas, who's done a great job with ffmpeg.

And 

me at mooncatventures.com


